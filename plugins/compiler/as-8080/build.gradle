/*
 * This file is part of emuStudio.
 *
 * Copyright (C) 2006-2020  Peter Jakubƒço
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

import org.apache.tools.ant.filters.ReplaceTokens

plugins {
  id 'java'
  id 'idea'
  id 'antlr'
}

dependencies {
  antlr "org.antlr:antlr4:4.9.2"
  implementation "org.antlr:antlr4-runtime:4.9.2"

  implementation libs.emuLib
  implementation libs.slf4JApi
  implementation libs.jcipAnnotations

  testImplementation libs.cpuTestSuite
  testImplementation libs.junit
  testImplementation libs.easyMock
  testImplementation libs.slf4JSimple
}

generateGrammarSource {
  maxHeapSize = "128m"
  arguments += ['-package', 'net.emustudio.plugins.compiler.as8080', '-visitor', '-no-listener']
  outputDirectory = file("${buildDir}/generated-src/antlr/main/net/emustudio/plugins/compiler/as8080")
}
compileJava.dependsOn generateGrammarSource

sourceSets {
  generated {
    java.srcDir "${buildDir}/generated-src/antlr/main"
  }
  main {
    java.srcDirs = [
      'src/main/java', "${buildDir}/generated-src/antlr/main"
    ]
  }
}
compileJava.source sourceSets.generated.java, sourceSets.main.java

idea {
  module {
    sourceDirs += file("build/generated-src/antlr")
  }
}

jar {
  archiveVersion = ''
  manifest {
    attributes manifestAttributes('net.emustudio.plugins.compiler.as8080.Runner')
  }
}

processResources {
  filesMatching("**/*.properties") {
    filter ReplaceTokens, tokens: [
      "project.version": project.version,
      "today.year": new Date().format("yyyy")
    ]
  }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

copy {
  from('src/main/examples')
  into "$buildDir/libs/examples"
}

copy {
  from('src/main/scripts')
  into "$buildDir/libs/scripts"
}

test {
  testLogging {
    events "passed", "skipped", "failed"
  }
}
