/*
 * This file is part of emuStudio.
 *
 * Copyright (C) 2006-2020  Peter Jakubƒço
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

package net.emustudio.plugins.cpu.ssem.gui;

import net.emustudio.emulib.plugins.cpu.CPU;
import net.emustudio.emulib.plugins.memory.MemoryContext;
import net.emustudio.emulib.runtime.helpers.NumberUtils;
import net.emustudio.plugins.cpu.ssem.EmulatorEngine;

import javax.swing.*;
import java.util.Objects;

import static net.emustudio.emulib.runtime.helpers.RadixUtils.formatBinaryString;
import static net.emustudio.plugins.cpu.ssem.gui.Constants.MONOSPACED_BIG_BOLD;
import static net.emustudio.plugins.cpu.ssem.gui.Constants.MONOSPACED_PLAIN;

public class CpuPanel extends JPanel {
    private final EmulatorEngine engine;
    private final MemoryContext<Byte> memory;

    public CpuPanel(CPU cpu, EmulatorEngine engine, MemoryContext<Byte> memory) {
        this.engine = Objects.requireNonNull(engine);
        this.memory = Objects.requireNonNull(memory);

        initComponents();
        cpu.addCPUListener(new Updater());
        lblSpeed.setText(String.valueOf(EmulatorEngine.INSTRUCTIONS_PER_SECOND));
    }

    private final class Updater implements CPU.CPUListener {

        @Override
        public void runStateChanged(CPU.RunState rs) {
            lblRunState.setText(rs.toString().toUpperCase());
        }

        @Override
        public void internalStateChanged() {
            int acc = engine.Acc.get();
            int ci = engine.CI.get();

            txtA.setText(String.format("%08x", acc));
            txtCI.setText(String.format("%08x", ci / 4));
            txtBinA.setText(formatBinary(acc));
            txtBinCI.setText(formatBinary(ci));

            try {
                Byte[] mCI = memory.readWord(ci);
                byte line = (byte) NumberUtils.reverseBits(mCI[0] & 0b11111000, 8);
                Byte[] mLine = memory.readWord(line * 4);

                txtMCI.setText(String.format("%08x", NumberUtils.readInt(mCI, NumberUtils.Strategy.REVERSE_BITS)));
                txtLine.setText(String.format("%02x", line));
                txtMLine.setText(String.format("%08x", NumberUtils.readInt(mLine, NumberUtils.Strategy.REVERSE_BITS)));

                txtBinMCI.setText(formatBinary(NumberUtils.readInt(mCI, NumberUtils.Strategy.BIG_ENDIAN)));
                txtBinLine.setText(formatBinary(line, 8));
                txtBinMLine.setText(formatBinary(NumberUtils.readInt(mLine, NumberUtils.Strategy.BIG_ENDIAN)));
            } catch (IndexOutOfBoundsException e) {
                txtMCI.setText("?");
                txtMLine.setText("?");
                txtBinMCI.setText("?");
                txtBinMLine.setText("?");
            }
        }

        private String formatBinary(int number) {
            return formatBinary(number, 32);
        }

        private String formatBinary(int number, int length) {
            return formatBinaryString(number, length, 4, true);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanel jPanel1 = new JPanel();
        lblRunState = new JLabel();
        JLabel jLabel7 = new JLabel();
        lblSpeed = new JLabel();
        JPanel jPanel2 = new JPanel();
        JLabel jLabel2 = new JLabel();
        JLabel jLabel3 = new JLabel();
        txtCI = new JTextField();
        txtA = new JTextField();
        txtBinA = new JTextField();
        txtBinCI = new JTextField();
        JPanel jPanel3 = new JPanel();
        JLabel jLabel4 = new JLabel();
        JLabel jLabel5 = new JLabel();
        txtMLine = new JTextField();
        txtMCI = new JTextField();
        txtBinMCI = new JTextField();
        txtBinMLine = new JTextField();
        JLabel jLabel6 = new JLabel();
        txtLine = new JTextField();
        txtBinLine = new JTextField();

        jPanel1.setBorder(BorderFactory.createTitledBorder("Run control"));

        lblRunState.setFont(MONOSPACED_BIG_BOLD);
        lblRunState.setForeground(new java.awt.Color(0, 153, 0));
        lblRunState.setText("BREAKPOINT");

        jLabel7.setFont(jLabel7.getFont().deriveFont(jLabel7.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel7.setText("ins/s");

        lblSpeed.setFont(MONOSPACED_PLAIN);
        lblSpeed.setText("0");
        lblSpeed.setToolTipText("Speed");

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblRunState)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblSpeed)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel7)
                    .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(lblRunState)
                        .addComponent(jLabel7)
                        .addComponent(lblSpeed))
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(BorderFactory.createTitledBorder("Registers"));

        jLabel2.setFont(MONOSPACED_PLAIN);
        jLabel2.setText("A");
        jLabel2.setToolTipText("Accumulator");

        jLabel3.setFont(MONOSPACED_PLAIN);
        jLabel3.setText("CI");
        jLabel3.setToolTipText("Control Instruction");

        txtCI.setEditable(false);
        txtCI.setFont(MONOSPACED_PLAIN);
        txtCI.setHorizontalAlignment(JTextField.RIGHT);
        txtCI.setText("0");

        txtA.setEditable(false);
        txtA.setFont(MONOSPACED_PLAIN);
        txtA.setHorizontalAlignment(JTextField.RIGHT);
        txtA.setText("0");

        txtBinA.setEditable(false);
        txtBinA.setFont(MONOSPACED_PLAIN);
        txtBinA.setHorizontalAlignment(JTextField.RIGHT);
        txtBinA.setText("0000 0000  0000 0000  0000 0000  0000 0000");

        txtBinCI.setEditable(false);
        txtBinCI.setFont(MONOSPACED_PLAIN);
        txtBinCI.setHorizontalAlignment(JTextField.RIGHT);
        txtBinCI.setText("0000 0000  0000 0000  0000 0000  0000 0000");

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(47, 47, 47)
                    .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2))
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtA, GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                        .addComponent(txtCI))
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(txtBinCI)
                        .addComponent(txtBinA))
                    .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtA, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBinA, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtCI, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBinCI, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(BorderFactory.createTitledBorder("Memory snippet"));

        jLabel4.setFont(MONOSPACED_PLAIN);
        jLabel4.setText("M[CI]");
        jLabel4.setToolTipText("Control Instruction");

        jLabel5.setFont(MONOSPACED_PLAIN);
        jLabel5.setText("M[line]");
        jLabel5.setToolTipText("Control Instruction");

        txtMLine.setEditable(false);
        txtMLine.setFont(MONOSPACED_PLAIN);
        txtMLine.setHorizontalAlignment(JTextField.RIGHT);
        txtMLine.setText("0");

        txtMCI.setEditable(false);
        txtMCI.setFont(MONOSPACED_PLAIN);
        txtMCI.setHorizontalAlignment(JTextField.RIGHT);
        txtMCI.setText("0");

        txtBinMCI.setEditable(false);
        txtBinMCI.setFont(MONOSPACED_PLAIN);
        txtBinMCI.setHorizontalAlignment(JTextField.RIGHT);
        txtBinMCI.setText("0000 0000  0000 0000  0000 0000  0000 0000");

        txtBinMLine.setEditable(false);
        txtBinMLine.setFont(MONOSPACED_PLAIN);
        txtBinMLine.setHorizontalAlignment(JTextField.RIGHT);
        txtBinMLine.setText("0000 0000  0000 0000  0000 0000  0000 0000");

        jLabel6.setFont(MONOSPACED_PLAIN);
        jLabel6.setText("line");
        jLabel6.setToolTipText("Control Instruction");

        txtLine.setEditable(false);
        txtLine.setFont(MONOSPACED_PLAIN);
        txtLine.setHorizontalAlignment(JTextField.RIGHT);
        txtLine.setText("0");

        txtBinLine.setEditable(false);
        txtBinLine.setFont(MONOSPACED_PLAIN);
        txtBinLine.setHorizontalAlignment(JTextField.RIGHT);
        txtBinLine.setText("0000 0000");

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtMLine, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtBinMLine))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel4))
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(txtMCI, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtBinMCI))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(txtLine, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtBinLine)))))
                    .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtMCI, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBinMCI, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtLine, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBinLine, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtMLine, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBinMLine, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    private JLabel lblRunState;
    private JLabel lblSpeed;
    private JTextField txtA;
    private JTextField txtBinA;
    private JTextField txtBinCI;
    private JTextField txtBinLine;
    private JTextField txtBinMCI;
    private JTextField txtBinMLine;
    private JTextField txtCI;
    private JTextField txtLine;
    private JTextField txtMCI;
    private JTextField txtMLine;
    // End of variables declaration//GEN-END:variables
}
