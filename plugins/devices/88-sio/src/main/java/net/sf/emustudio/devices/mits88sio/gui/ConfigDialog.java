/*
 * KISS, YAGNI, DRY
 *
 * (c) Copyright 2006-2017, Peter Jakubƒço
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along
 *  with this program; if not, write to the Free Software Foundation, Inc.,
 *  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */
package net.sf.emustudio.devices.mits88sio.gui;

import emulib.runtime.StaticDialogs;
import net.sf.emustudio.devices.mits88sio.impl.SIOSettings;

import javax.swing.*;
import java.util.Arrays;
import java.util.Objects;

public class ConfigDialog extends javax.swing.JDialog {
    private final SIOSettings settings;
    private final PortListModel statusPortsModel = new PortListModel();
    private final PortListModel dataPortsModel = new PortListModel();

    public ConfigDialog(SIOSettings settings) {
        this.settings = Objects.requireNonNull(settings);

        super.setLocationRelativeTo(null);
        initComponents();

        statusPortsModel.addAll(settings.getStatusPorts());
        dataPortsModel.addAll(settings.getDataPorts());
    }

    private void setDefaultStatusPorts() {
        statusPortsModel.clear();
        statusPortsModel.addAll(Arrays.asList(3, 16, 20, 22, 24));
    }

    private void setDefaultDataPorts() {
        dataPortsModel.clear();
        dataPortsModel.addAll(Arrays.asList(2, 17, 21, 23, 25));
    }


    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstStatusPorts = new javax.swing.JList<>();
        btnStatusAdd = new javax.swing.JButton();
        btnStatusRemove = new javax.swing.JButton();
        btnStatusDefault = new javax.swing.JButton();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstDataPorts = new javax.swing.JList<>();
        btnDataAdd = new javax.swing.JButton();
        btnDataRemove = new javax.swing.JButton();
        btnDataDefault = new javax.swing.JButton();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        chkApplyAtStartup = new javax.swing.JCheckBox();
        btnOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MITS SIO Settings");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Status port -> CPU"));

        lstStatusPorts.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        lstStatusPorts.setModel(statusPortsModel);
        lstStatusPorts.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(lstStatusPorts);

        btnStatusAdd.setFont(btnStatusAdd.getFont().deriveFont(btnStatusAdd.getFont().getStyle() & ~java.awt.Font.BOLD));
        btnStatusAdd.setText("+");
        btnStatusAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatusAddActionPerformed(evt);
            }
        });

        btnStatusRemove.setFont(btnStatusRemove.getFont().deriveFont(btnStatusRemove.getFont().getStyle() & ~java.awt.Font.BOLD));
        btnStatusRemove.setText("-");
        btnStatusRemove.setToolTipText("");
        btnStatusRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatusRemoveActionPerformed(evt);
            }
        });

        btnStatusDefault.setFont(btnStatusDefault.getFont().deriveFont(btnStatusDefault.getFont().getStyle() & ~java.awt.Font.BOLD));
        btnStatusDefault.setText("Default");
        btnStatusDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatusDefaultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnStatusAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnStatusRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(btnStatusDefault))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btnStatusAdd)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnStatusRemove)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnStatusDefault)
                    .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Data port -> CPU"));

        lstDataPorts.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        lstDataPorts.setModel(dataPortsModel);
        lstDataPorts.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(lstDataPorts);

        btnDataAdd.setFont(btnDataAdd.getFont().deriveFont(btnDataAdd.getFont().getStyle() & ~java.awt.Font.BOLD));
        btnDataAdd.setText("+");
        btnDataAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataAddActionPerformed(evt);
            }
        });

        btnDataRemove.setFont(btnDataRemove.getFont().deriveFont(btnDataRemove.getFont().getStyle() & ~java.awt.Font.BOLD));
        btnDataRemove.setText("-");
        btnDataRemove.setToolTipText("");
        btnDataRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataRemoveActionPerformed(evt);
            }
        });

        btnDataDefault.setFont(btnDataDefault.getFont().deriveFont(btnDataDefault.getFont().getStyle() & ~java.awt.Font.BOLD));
        btnDataDefault.setText("Default");
        btnDataDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDataDefaultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnDataAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDataRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(btnDataDefault))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(btnDataAdd)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnDataRemove)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnDataDefault)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel1.setText("<html>It is possible to bind status port of this device to one or more CPU ports. Please be aware of not interferencing with other devices.");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        chkApplyAtStartup.setFont(chkApplyAtStartup.getFont().deriveFont(chkApplyAtStartup.getFont().getStyle() & ~java.awt.Font.BOLD));
        chkApplyAtStartup.setSelected(true);
        chkApplyAtStartup.setText("Apply at startup");

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(chkApplyAtStartup)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(chkApplyAtStartup)
                        .addComponent(btnOK))
                    .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStatusAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatusAddActionPerformed
        String number = JOptionPane.showInputDialog(this, "Please specify port number:", "Add status port", JOptionPane.PLAIN_MESSAGE);

        try {
            int port = Integer.decode(number);

            if (dataPortsModel.contains(port)) {
                StaticDialogs.showErrorMessage("The number is already taken by data port");
            } else {
                statusPortsModel.add(port);
            }
        } catch (NumberFormatException e) {
            StaticDialogs.showErrorMessage("Could not parse number! For hexa numbers, use prefix 0x.", "Add status port");
        }
    }//GEN-LAST:event_btnStatusAddActionPerformed

    private void btnDataAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataAddActionPerformed
        String number = JOptionPane.showInputDialog(this, "Please specify port number:", "Add data port", JOptionPane.PLAIN_MESSAGE);

        try {
            int port = Integer.decode(number);

            if (statusPortsModel.contains(port)) {
                StaticDialogs.showErrorMessage("The number is already taken by status port");
            } else {
                dataPortsModel.add(port);
            }
        } catch (NumberFormatException e) {
            StaticDialogs.showErrorMessage("Could not parse number! For hexa numbers, use prefix 0x.", "Add data port");
        }
    }//GEN-LAST:event_btnDataAddActionPerformed

    private void btnStatusRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatusRemoveActionPerformed
        int i = lstStatusPorts.getSelectedIndex();
        if (i == -1) {
            StaticDialogs.showErrorMessage("Status port must be selected!", "Remove status port");
        } else {
            statusPortsModel.removeAt(i);
        }
    }//GEN-LAST:event_btnStatusRemoveActionPerformed

    private void btnDataRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataRemoveActionPerformed
        int i = lstDataPorts.getSelectedIndex();
        if (i == -1) {
            StaticDialogs.showErrorMessage("Data port must be selected!", "Remove data port");
        } else {
            dataPortsModel.removeAt(i);
        }
    }//GEN-LAST:event_btnDataRemoveActionPerformed

    private void btnDataDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDataDefaultActionPerformed
        setDefaultDataPorts();
    }//GEN-LAST:event_btnDataDefaultActionPerformed

    private void btnStatusDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatusDefaultActionPerformed
        setDefaultStatusPorts();
    }//GEN-LAST:event_btnStatusDefaultActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        settings.setStatusPorts(statusPortsModel.getAll());
        settings.setDataPorts(dataPortsModel.getAll());

        settings.write();

        dispose();
    }//GEN-LAST:event_btnOKActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDataAdd;
    private javax.swing.JButton btnDataDefault;
    private javax.swing.JButton btnDataRemove;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnStatusAdd;
    private javax.swing.JButton btnStatusDefault;
    private javax.swing.JButton btnStatusRemove;
    private javax.swing.JCheckBox chkApplyAtStartup;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lstDataPorts;
    private javax.swing.JList<String> lstStatusPorts;
    // End of variables declaration//GEN-END:variables
}
